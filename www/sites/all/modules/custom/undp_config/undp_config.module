<?php
/**
 * @file
 */
/**
 * Implements hook_block_info().
 */
function undp_config_block_info() {
 	$blocks = array();
 	$blocks['undp_footer_menu'] = array(
     'info' => t('Undp footer menu'),
  );
  $blocks['undp_a_propos'] = array(
     'info' => t('Undp a propos'),
  );
  $blocks['undp_social_share'] = array(
     'info' => t('Undp social share'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function undp_config_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'undp_footer_menu':
      $block['subject'] = 'Menu';
      $block['content'] = undp_config_get_content($delta);
      break;

    case 'undp_a_propos':
      $block['subject'] = 'A propos';
      $block['content'] = undp_config_get_content($delta);
      break;

    case 'undp_social_share':
      $block['subject'] = '';
      $block['content'] = undp_config_get_content($delta);
      break;  
  }
  return $block;
}   

function undp_config_get_content($delta = '') {
  switch ($delta) {
    case 'undp_footer_menu':
      //$items = array();
      $accueil = l("Accueil", '<front>');
      $post = l("Actualités", 'actualites');
      $formation = l("Formations", 'formations');
      $event = l("Evénements", 'evenements');
      $biblio = l("Bibliothèque", 'bibliothèque');
      $condition = l("Conditions d’utilisation", 'conditions-d’utilisation');
      $contact = l('Contact', 'contact');
      $items['items'] = array($accueil, $post, $formation, $event, $biblio, $condition, $contact);
      $content = theme('item_list', $items);
      break;

    case 'undp_a_propos':
      $content = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a nisl in tellus molestie rutrum. Nullam sed risus venenatis, pretium tellus eu, placerat est. Nunc vel faucibus nulla. Vestibulum ac lacus vel mi ultricies laoreet nec sed mauris. Fusce urna neque, porttitor eget varius sed, maximus eget lectus. Quisque lobortis dolor lacinia ante cursus facilisis. <div id="social"><a href="http://twitter.com" target="_blank" class="twitter"></a><a href="http://facebook.com" target="_blank" class="facebook"></a><a href="http://linkedin.com" target="_blank" class="linkedin"></a></div>';
      break;

    case 'undp_social_share':
      global $base_url;
      $node = node_load(arg(1));
      $content = '<a href="http://twitter.com/share?url=<'. $base_url . '/node/' . $node->nid . '>' . '&text=<' . $node->title .'>via=<' . $base_url . '/node/' . $node->nid .'>">
        Twitter</a>';
      $content .= '<a href="http://www.facebook.com/sharer/sharer.php?u=<'. $base_url . '/node/' . $node->nid . '>">
       Facebook</a>';
      $content .= '<a href="http://www.linkedin.com/shareArticle?url=<'. $base_url . '/node/' . $node->nid . '>&title=<' . $node->title .'>&summary=<' . $base_url . '/node/' . $node->nid .'>&source=<SOURCE_URL>">LinkedIn</a>';   
  }
  return $content;
}  
/**
 * Implements hook_block_info().
 */
function undp_config_block_view_alter(&$data, $block) {
   if ($block->module == 'on_the_web') {
     unset($data['subject']);
   }
}

/**
 * Implements hook_views_pre_render().
 */
function undp_config_views_pre_render(&$view) {
  if ($view->name == 'discussions' && $view->current_display == 'block') {
    unset($view->result[0]);
  }
  if ($view->name == 'undp_formation') {
    foreach ($view->result as $result) {
      if (!empty($result->field_field_formation_image)) {
        unset($result->field_field_formation_video);
      }
    }
  }
} 

/**
 * Implements hook_form_FORM_ID_alter().
 */
function undp_config_form_comment_form_alter(&$form, &$form_state) {
  unset($form['subject']);
}

function undp_config_form_contact_site_form_alter(&$form, &$form_state) {
  unset($form['copy']);
  $form['mail']['#default_value'] = '';
  $form['name']['#default_value'] = '';
}

/**
 * Implements hook_node_insert().
 */
function undp_config_node_insert($node) {
  // Create a message when a user creates a new node.
  dpm($node);
  if ($node->type == 'post') {
    $account = user_load($node->uid);
    $message_type = 'post_comment';
    $message = message_create($message_type, array(
      'uid' => $account->uid));
    dpm($message);
    // Save reference to the node in the node   reference field.
    $wrapper = entity_metadata_wrapper('message', $message);
    $wrapper->field_node_ref->set($node);
    $wrapper->save();
  }  
}
